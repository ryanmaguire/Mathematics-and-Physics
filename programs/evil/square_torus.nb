(******************************************************************************)
(*                                 LICENSE                                    *)
(******************************************************************************)
(*  This file is part of libtmpl.                                             *)
(*                                                                            *)
(*  libtmpl is free software: you can redistribute it and/or modify it        *)
(*  it under the terms of the GNU General Public License as published by      *)
(*  the Free Software Foundation, either version 3 of the License, or         *)
(*  (at your option) any later version.                                       *)
(*                                                                            *)
(*  libtmpl is distributed in the hope that it will be useful,                *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of            *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *)
(*  GNU General Public License for more details.                              *)
(*                                                                            *)
(*  You should have received a copy of the GNU General Public License         *)
(*  along with libtmpl.  If not, see <https://www.gnu.org/licenses/>.         *)
(******************************************************************************)
(*    This file is an extra just to mess around with making a torus in        *)
(*    mathematica.                                                            *)
(******************************************************************************)
(*    Author: Ryan Maguire                                                    *)
(*    Date: 2021/07/28                                                        *)
(******************************************************************************)

(* A normal circular torus.                                                   *)
x0[u_] := Cos[u] + 2.0
y0[u_] := Sin[u]
ParametricPlot3D[
    {
        x0[u]*Sin[v],
        x0[u]*Cos[v],
        y0[u]
    },
    {u, 0.0, 2.0*Pi}, {v, 0.0, 2.0*Pi},
    PlotPoints -> 200
]

(* A Diamond torus.                                                           *)
x1[u_] := 2 + Cos[u]
y1[u_] := Sign[Sin[u]]*(1.0 - Abs[Cos[u]])
ParametricPlot3D[
    {
        x1[u]*Sin[v],
        x1[u]*Cos[v],
        y1[u]
    },
    {u, 0.0, 2.0*Pi}, {v, 0.0, 2.0*Pi},
    PlotPoints -> 200
]

(* And now we twist the diamond around as we revolve the torus.               *)
x2[u_] := Cos[u]
y2[u_] := Sign[Sin[u]]*(1.0 - Abs[Cos[u]])
x3[u_,v_] := x2[u]*Cos[v] - y2[u]*Sin[v] + 2.0
y3[u_,v_] := x2[u]*Sin[v] + y2[u]*Cos[v]
ParametricPlot3D[
    {
        x3[u,v]*Sin[v],
        x3[u,v]*Cos[v],
        y3[u,v]
    },
    {u, 0.0, 2.0*Pi}, {v, 0.0, 2.0*Pi},
    PlotPoints -> 200
]

(* And now we make a "trefoil" torus.                                         *)
r[u_] := 0.25*(Sin[3*u] + 3.0)
x4[u_] := r[u]*Cos[u] + 2.0
y4[u_] := r[u]*Sin[u]
ParametricPlot3D[
    {
        x4[u]*Sin[v],
        x4[u]*Cos[v],
        y4[u]
    },
    {u, 0.0, 2.0*Pi}, {v, 0.0, 2.0*Pi},
    PlotPoints -> 200
]

(* And then spin the trefoil around.                                          *)
r[u_] := 0.25*(Sin[3*u] + 3.0)
x5[u_] := r[u]*Cos[u]
y5[u_] := r[u]*Sin[u]
x6[u_,v_] := x5[u]*Cos[v] - y5[u]*Sin[v] + 2.0
y6[u_,v_] := x5[u]*Sin[v] + y5[u]*Cos[v]
ParametricPlot3D[
    {
        x6[u,v]*Sin[v],
        x6[u,v]*Cos[v],
        y6[u,v]
    },
    {u, 0.0, 2.0*Pi}, {v, 0.0, 2.0*Pi},
    PlotPoints -> 200
]
